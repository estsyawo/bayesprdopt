% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Distri_Sim_functions.R
\name{getprobs}
\alias{getprobs}
\title{#===========================================================================================#
# Take a value V in the support VecX get its y-value using the mapping VecX to VecY
#' @export
fitin<- function(V,VecX,VecY){
  if(V>=min(VecX) & V<max(VecX)){
    id = min(which(VecX>=V)); 
    #fr = (V-VecX[id])/(abs(VecX[id]-VecX[id+1]))
    #val= fr*VecY[id] + (1-fr)*VecY[id+1]
    val= mean(VecY[id:(id+1)])
    # if(fr>1){
    #   val = VecY[id+1]
    # }else if(fr<0){
    #   val = VecY[id]
    # }
    
  }else if(V==max(VecX)){
    val = tail(VecY,n=1)
  }else{
    val = 1e-06
  }
  return(val)
}
Get density values}
\usage{
getprobs(vec, type = "probability")
}
\arguments{
\item{vec}{continuous distribution whose random draws are elements of vec}

\item{type}{the "probability" or "density" that is preferred as output}
}
\value{
mval a vector of probability weights of each element of vec
}
\description{
Get density values for a continuous distribution whose random draws are the vector 
\code{vec}
}
\examples{
set.seed(40); v = rnorm(1000)**2; plot(density(v)); # chi-square distributed
# generate probability weights for each element of v: 
dn<- getprobs(v); plot(dn$x,dn$y,type="l")

}
